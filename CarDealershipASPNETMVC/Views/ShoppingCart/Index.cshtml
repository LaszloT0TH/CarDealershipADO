@model IEnumerable<CarDealershipASPNETMVC.Models.OrderModel>

@*
    // ShoppingCart
*@
@{double grandTotal = 0; double summe = 0;}
<h1>Einkaufswagen</h1>

<br />
<h2>Einkaufsliste</h2>



@if (GlobalData.UserAccess == "Customer")
{ 
    @if (ViewBag.NewOrdersListCount != 0)
    {
        <br />
        <a class='btn btn-primary btn-sm' @Html.ActionLink("Kaufen", "AddOrder")></a>
        <br />
    }
    else
    {
        <br />
        <h4>Bitte die Produckte aussuchen</h4>
        <br />
    }
    
}
else
{   
    @if (ViewBag.CustomerIdCountNullCount == 0 && ViewBag.NewOrdersListCount != 0)
    {
        // if a customer is assigned to each product in the list and the list is not empty
        // wenn jedem Produkt in der Liste ein Kunde zugeordnet ist und die Liste nicht leer ist
        <br />
        <a class='btn btn-primary btn-sm' @Html.ActionLink("Kaufen", "AddOrder")></a>
        <br />
    }
    else
    {
        @if (ViewBag.NewOrdersListCount == 0)
        {
            <br />
            <h4>Bitte die Produckte aussuchen</h4>
            <br />

        }
        else
        {
            <br />
            <h4>Bitte die Kunde aussuchen</h4>
            <br />
            <br />
            <a class='btn btn-primary btn-sm' @Html.ActionLink("Eine Kunde hinzufüegen für alles", "AddCustoner")></a>
            <br />

        }
    }
}


@if (GlobalData.UserAccess != "Customer" && ViewBag.CustomerIdCountNullCount == 0 && ViewBag.NewOrdersListCount != 0)
{
    // if you are not a customer or a customer belongs to all products
    // wenn Sie kein Kunde sind oder ein Kunde zu allen Produkten gehört
    <br />
    <a class='btn btn-primary btn-sm' @Html.ActionLink("Eine Kunde hinzufüegen für alles", "AddCustoner")></a>
    <br />
}

<table class="table">
    <thead>
        <tr>
            @if (GlobalData.UserAccess != "Customer")
            {
                <th>@Html.DisplayNameFor(model => model.CustomerId)</th>
                <th>@Html.DisplayNameFor(model => model.CustomerFirstName)</th>
                <th>@Html.DisplayNameFor(model => model.CustomerLastName)</th>
                <th>@Html.DisplayNameFor(model => model.SalesPersonId)</th>
                <th>@Html.DisplayNameFor(model => model.SalesPersonFirstName)</th>
                <th>@Html.DisplayNameFor(model => model.SalesPersonLastName)</th>
                <th>@Html.DisplayNameFor(model => model.ProductId)</th>
            }

            <th>@Html.DisplayNameFor(model => model.ProductGroup)</th>
            <th>@Html.DisplayNameFor(model => model.ProductName)</th>
            @if (GlobalData.UserAccess != "Customer")
            {
                <th>@Html.DisplayNameFor(model => model.CarModel)</th>
                <th>@Html.DisplayNameFor(model => model.CarColor)</th>
            }
            <th>@Html.DisplayNameFor(model => model.Quantity)</th>
            <th>Netto Verkaufpreis</th>
            <th>@Html.DisplayNameFor(model => model.TaxPercentageValue)</th>
            <th>Brutto Summe</th>
        </tr>
    </thead>
    <tbody>
        @foreach (OrderModel order in Model)
        {
            <tr>
                @if (GlobalData.UserAccess != "Customer")
                {
                    <td>@order.CustomerId</td>
                    <td>@order.CustomerFirstName</td>
                    <td>@order.CustomerLastName</td>
                    <td>@order.SalesPersonId</td>
                    <td>@order.SalesPersonFirstName</td>
                    <td>@order.SalesPersonLastName</td>
                    <td>@order.ProductId</td>
                }
                <td>@order.ProductGroup</td>
                <td>@order.ProductName</td>
                @if (GlobalData.UserAccess != "Customer")
                {
                    <td>@order.CarModel</td>
                    <td>@order.CarColor</td>
                }
                <td>@order.Quantity</td>
                <td>@order.SaleAmount</td>
                <td>@order.TaxPercentageValue</td>
                @{
                    summe = (Convert.ToDouble(order.SaleAmount * order.Quantity)) * (1 + (Convert.ToDouble(order.TaxPercentageValue)) /100);
                }
                <td>
                    @summe.ToString("0.##")
                </td>
                <td>
                    <a class="btn btn-primary btn-sm" @Html.ActionLink("Edit", "Edit", new { id=order.OrderId })></a>
                    <a class="btn btn-danger btn-sm" @Html.ActionLink("Delete", "Delete", new { id=order.OrderId })></a>
                </td>
                @{
                grandTotal += Convert.ToDouble(order.Quantity * order.SaleAmount * (1 + (Convert.ToDouble(order.TaxPercentageValue)) / 100));
                }
            </tr>
        }
    </tbody>
        <thead>
        <tr>
            <th>Gesamtsumme</th><th>@grandTotal.ToString("0.##")</th>
        </tr>
    </thead>
</table>